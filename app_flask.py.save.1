from flask import Flask, request, jsonify, render_template
import joblib
import numpy as np

# Initialize Flask app
app = Flask(__name__)

# Load the trained model
MODEL_PATH = "churn_model.pkl"
try:
    model = joblib.load(MODEL_PATH)
    model_loaded = True
except Exception as e:
    model = None
    model_loaded = False

@app.route("/")
def home():
    """
    Serve the HTML page.
    """
    return render_template("index.html")

@app.route("/predict", methods=["POST"])
def predict():
    """
    Make a prediction from user input.
    """
    if not model_loaded:
        return jsonify({"error": "Model not loaded. Please train and save it."}), 500

    try:
        # Get user input from the form
        features = [float(x) for x in request.form["features"].split(",")]
        features_array = np.array(features).reshape(1, -1)
        prediction = model.predict(features_array)

        # Return the result on the webpage
        return render_template("index.html", prediction_text=f"Prediction: {int(prediction[0])}")
    
    except Exception as e:
        return jsonify({"error": str(e)}), 400

@app.route("/healthcheck", methods=["GET"])
def healthcheck():
    """
    Check the API status.
    """
    if model_loaded:
        return jsonify({"status": "ok", "message": "API is running and model is loaded."})
    else:
        return jsonify({"status": "error", "message": "Model is not loaded. Please check the file path."})

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000, debug=True)
